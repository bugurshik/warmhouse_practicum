services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smarthome"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - smarthome-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: my-rabbit
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"  # AMQP протокол
      - "15672:15672"  # Web интерфейс
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - smarthome-network

  temperature-api:
    build:
      context: ./temperature_api
      dockerfile: Dockerfile
    container_name: temperature-api
    ports:
      - "8081:8081"
    restart: unless-stopped
    networks:
      - smarthome-network

  telemetry-api:
    build:
      context: ./telemetry_api
      dockerfile: Dockerfile
    container_name: telemetry-api
    environment:
      - ASPNETCORE_URLS=http://+:8083
    ports:
      - "8083:8083"
    restart: unless-stopped
    networks:
      - smarthome-network

  device-management-api:
    build:
      context: ./device_management_api
      dockerfile: Dockerfile
    container_name: device-management-api
    ports:
      - "8084:8084"
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/smarthome
    networks:
      - smarthome-network

  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      temperature-api:
        condition: service_started
      telemetry-api:
        condition: service_started
      device-management-api:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/smarthome
      - TEMPERATURE_API_URL=http://temperature-api:8081
      - MANAGEMENT_API_URL=http://device-management-api:8084
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  smarthome-network:
    driver: bridge